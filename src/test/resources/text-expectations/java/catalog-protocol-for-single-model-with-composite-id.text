package io.vlingo.xoomapp.model.author;

import io.vlingo.xoom.actors.Definition;
import java.util.*;
import io.vlingo.xoom.common.Completes;
import io.vlingo.xoom.actors.Stage;
import io.vlingo.xoomapp.model.*;

public interface Author {

  /*
   * Returns my current state.
   *
   * @return {@code Completes<AuthorState>}
   */
  Completes<AuthorState> currentState();

  Completes<AuthorState> withName(final Name name);

  static Completes<AuthorState> withName(final Stage stage, final String catalogId, final Name name) {
    final String prefix = String.format("g-{0}:", catalogId);
    final io.vlingo.xoom.actors.Address _address = stage.addressFactory().uniquePrefixedWith(prefix);
    final Author _author = stage.actorFor(Author.class, Definition.has(AuthorEntity.class, Definition.parameters(_address.idString())), _address);
    return _author.withName(name);
  }

  Completes<AuthorState> changeRank(final List<Rank> rank);

  Completes<AuthorState> hide();

  Completes<AuthorState> relateAuthor(final String relatedAuthor);

  Completes<AuthorState> relateAuthors(final Set<String> relatedAuthors);

  Completes<AuthorState> unrelateAuthor(final String relatedAuthor);

  Completes<AuthorState> replaceAllRelatedAuthors(final Set<String> relatedAuthors);

}